{"ast":null,"code":"var _class;\nimport { environment } from 'src/assets/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl;\n  }\n  postTask(data) {\n    return this.http.post(this.baseUrl + 'api/postTask', data);\n  }\n  getTask() {\n    return this.http.get(this.baseUrl + 'api/getAllTask');\n  }\n}\n_class = TaskServiceService;\n_class.ɵfac = function TaskServiceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","TaskServiceService","constructor","http","baseUrl","postTask","data","post","getTask","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\node Dhruvesh\\Webashlar\\Frontend\\src\\app\\Service\\TasksApi\\task-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/assets/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskServiceService {\n\n  baseUrl  = environment.baseUrl\n  \n\n  constructor(private http : HttpClient) { }\n\n\n  postTask(data:any):Observable<any>{\n\n\n    return this.http.post(this.baseUrl+'api/postTask',data)\n\n  }\n\n\n  getTask():Observable<any>{\n\n\n    return this.http.get(this.baseUrl+'api/getAllTask')\n\n  }\n}\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,wBAAwB;;;AAKpD,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,OAAO,GAAIJ,WAAW,CAACI,OAAO;EAGW;EAGzCC,QAAQA,CAACC,IAAQ;IAGf,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,GAAC,cAAc,EAACE,IAAI,CAAC;EAEzD;EAGAE,OAAOA,CAAA;IAGL,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,OAAO,GAAC,gBAAgB,CAAC;EAErD;;SArBWH,kBAAkB;;mBAAlBA,MAAkB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBZ,MAAkB;EAAAa,OAAA,EAAlBb,MAAkB,CAAAc,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}