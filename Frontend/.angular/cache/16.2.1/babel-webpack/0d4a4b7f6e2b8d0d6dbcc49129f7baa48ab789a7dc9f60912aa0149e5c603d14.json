{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '../Service/AuthService/auth.service';\nimport { inject } from '@angular/core';\nexport const authGuardGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  let loggedIn;\n  let sessionData = JSON.parse(sessionStorage['Credential']);\n  if (sessionData == null) {\n    router.navigate(['/login']);\n  } else {\n    authService.checkLogin().subscribe(response => {\n      console.log(response);\n      if (!response.response) {\n        router.navigate(['/login']);\n        loggedIn = false;\n      } else {\n        loggedIn = true;\n      }\n    });\n  }\n  return true;\n};","map":{"version":3,"names":["Router","AuthService","inject","authGuardGuard","route","state","authService","router","loggedIn","sessionData","JSON","parse","sessionStorage","navigate","checkLogin","subscribe","response","console","log"],"sources":["E:\\node Dhruvesh\\Webashlar\\Frontend\\src\\app\\Service\\auth-guard.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\nimport {AuthService} from '../Service/AuthService/auth.service'\nimport { inject } from '@angular/core';\n\nexport const authGuardGuard: CanActivateFn = (route, state) => {\n  \n  const authService: AuthService = inject(AuthService);\n  const router : Router = inject(Router)\n\n  let loggedIn\n\n  let sessionData = JSON.parse(sessionStorage['Credential'])\n\n  if(sessionData == null){\n    router.navigate(['/login'])\n  }else{\n    authService.checkLogin().subscribe(response=>{\n      console.log(response)\n      if(!response.response){\n        router.navigate(['/login'])\n        loggedIn = false\n        \n      }else{\n        loggedIn = true\n        \n      }\n    })\n  }\n  \n  \n\n  \n\n  return true\n\n  \n  \n};\n"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAAQC,WAAW,QAAO,qCAAqC;AAC/D,SAASC,MAAM,QAAQ,eAAe;AAEtC,OAAO,MAAMC,cAAc,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAE5D,MAAMC,WAAW,GAAgBJ,MAAM,CAACD,WAAW,CAAC;EACpD,MAAMM,MAAM,GAAYL,MAAM,CAACF,MAAM,CAAC;EAEtC,IAAIQ,QAAQ;EAEZ,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC,YAAY,CAAC,CAAC;EAE1D,IAAGH,WAAW,IAAI,IAAI,EAAC;IACrBF,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;GAC5B,MAAI;IACHP,WAAW,CAACQ,UAAU,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAE;MAC3CC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAG,CAACA,QAAQ,CAACA,QAAQ,EAAC;QACpBT,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC3BL,QAAQ,GAAG,KAAK;OAEjB,MAAI;QACHA,QAAQ,GAAG,IAAI;;IAGnB,CAAC,CAAC;;EAOJ,OAAO,IAAI;AAIb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}