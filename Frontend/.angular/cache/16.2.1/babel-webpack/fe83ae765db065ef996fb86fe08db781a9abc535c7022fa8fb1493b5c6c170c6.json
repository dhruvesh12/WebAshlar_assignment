{"ast":null,"code":"var _class;\nimport { environment } from 'src/assets/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl;\n  }\n  postTask(data) {\n    return this.http.post(this.baseUrl + 'api/postTask', data);\n  }\n  getAllTask(Id) {\n    return this.http.get(this.baseUrl + 'api/getAllTask/' + Id);\n  }\n  EditTask(id, Data) {\n    return this.http.put(this.baseUrl + 'api/updateTask/' + id, Data);\n  }\n  EditTaskStatus(id, Data) {\n    return this.http.put(this.baseUrl + 'api/updateTaskStatus/' + id, Data);\n  }\n  deleteTask(id) {\n    return this.http.delete(this.baseUrl + 'api/updateTaskStatus/' + id);\n  }\n}\n_class = TaskServiceService;\n_class.ɵfac = function TaskServiceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","TaskServiceService","constructor","http","baseUrl","postTask","data","post","getAllTask","Id","get","EditTask","id","Data","put","EditTaskStatus","deleteTask","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\node Dhruvesh\\Webashlar\\Frontend\\src\\app\\Service\\TasksApi\\task-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/assets/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskServiceService {\n\n  baseUrl  = environment.baseUrl\n  \n\n  constructor(private http : HttpClient) { }\n\n\n  postTask(data:any):Observable<any>{\n\n\n    return this.http.post(this.baseUrl+'api/postTask',data)\n\n  }\n\n\n  getAllTask(Id:any):Observable<any>{\n\n\n    return this.http.get(this.baseUrl+'api/getAllTask/'+Id)\n\n  }\n\n\n  EditTask(id:any,Data:any):Observable<any>{\n    return this.http.put(this.baseUrl+'api/updateTask/'+id,Data)\n  }\n\n  EditTaskStatus(id:any,Data:any):Observable<any>{\n    return this.http.put(this.baseUrl+'api/updateTaskStatus/'+id,Data)\n  }\n\n\n  deleteTask(id:any):Observable<any>{\n    return this.http.delete(this.baseUrl+'api/updateTaskStatus/'+id)\n  }\n}\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,wBAAwB;;;AAKpD,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,OAAO,GAAIJ,WAAW,CAACI,OAAO;EAGW;EAGzCC,QAAQA,CAACC,IAAQ;IAGf,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,GAAC,cAAc,EAACE,IAAI,CAAC;EAEzD;EAGAE,UAAUA,CAACC,EAAM;IAGf,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,OAAO,GAAC,iBAAiB,GAACK,EAAE,CAAC;EAEzD;EAGAE,QAAQA,CAACC,EAAM,EAACC,IAAQ;IACtB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,OAAO,GAAC,iBAAiB,GAACQ,EAAE,EAACC,IAAI,CAAC;EAC9D;EAEAE,cAAcA,CAACH,EAAM,EAACC,IAAQ;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,OAAO,GAAC,uBAAuB,GAACQ,EAAE,EAACC,IAAI,CAAC;EACpE;EAGAG,UAAUA,CAACJ,EAAM;IACf,OAAO,IAAI,CAACT,IAAI,CAACc,MAAM,CAAC,IAAI,CAACb,OAAO,GAAC,uBAAuB,GAACQ,EAAE,CAAC;EAClE;;SAnCWX,kBAAkB;;mBAAlBA,MAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBpB,MAAkB;EAAAqB,OAAA,EAAlBrB,MAAkB,CAAAsB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}