{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Service/AuthService/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Required Field \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Required Field \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.sucessMgs, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/dashboard\"];\n};\nexport class LoginComponent {\n  constructor(FormBuilder, Service, route) {\n    this.FormBuilder = FormBuilder;\n    this.Service = Service;\n    this.route = route;\n    this.submitted = false;\n    this.sucessMgs = '';\n  }\n  ngOnInit() {\n    console.log(\"Running\");\n    this.loginForm = this.FormBuilder.group({\n      Username: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  submit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.Service.login(this.loginForm.value).subscribe(response => {\n      if (response.response) {\n        console.log(response);\n        response.detail['token'] = response.token;\n        sessionStorage.setItem(\"Credential\", JSON.stringify(response.detail));\n        this.sucessMgs = \"Sucessfully Logged In\";\n        setTimeout(() => {\n          this.submitted = false;\n          this.loginForm.reset();\n          this.sucessMgs = '';\n          this.route.navigate(['/dashboard']);\n        }, 1000);\n      } else {\n        this.sucessMgs = \"User Not Found with Given Credential\";\n        setTimeout(() => {\n          this.submitted = false;\n          this.loginForm.reset();\n          this.sucessMgs = '';\n        }, 1000);\n      }\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 12,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\"], [1, \"text-center\", \"text-dark\", \"mt-5\"], [1, \"text-center\", \"mb-5\", \"text-dark\"], [1, \"card\", \"my-5\"], [1, \"card-body\", \"cardbody-color\", \"p-lg-5\", 3, \"formGroup\"], [1, \"text-center\"], [\"src\", \"https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397__340.png\", \"width\", \"200px\", \"alt\", \"profile\", 1, \"img-fluid\", \"profile-image-pic\", \"img-thumbnail\", \"rounded-circle\", \"my-3\"], [1, \"mb-3\"], [\"formControlName\", \"Username\", \"type\", \"text\", \"id\", \"Username\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"User Name\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"Password\", \"type\", \"password\", \"id\", \"Password\", \"placeholder\", \"password\"], [\"class\", \"alert alert-primary\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"text-center\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-color\", \"px-5\", \"mb-5\", \"w-100\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"text-center\", \"mb-5\", \"text-dark\"], [1, \"text-dark\", \"fw-bold\", 3, \"routerLink\"], [1, \"text-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtext(6, \"Made with bootstrap\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6)(9, \"div\", 7);\n      i0.ɵɵelement(10, \"img\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9);\n      i0.ɵɵelement(12, \"input\", 10);\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 12);\n      i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementStart(18, \"div\", 14);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_div_click_18_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(19, \"button\", 15);\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 16);\n      i0.ɵɵtext(22, \"Not Registered? \");\n      i0.ɵɵelementStart(23, \"a\", 17);\n      i0.ɵɵtext(24, \" Create an Account\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassMap(ctx.submitted && ctx.loginForm.controls[\"Username\"].errors ? \"form-control is-invalid\" : \"form-control\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.loginForm.controls[\"Username\"].errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMap(ctx.submitted && ctx.loginForm.controls[\"Password\"].errors ? \"form-control is-invalid\" : \"form-control\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.loginForm.controls[\"Password\"].errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.sucessMgs != \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c0));\n    }\n  },\n  dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".btn-color[_ngcontent-%COMP%]{\\n    background-color: #0e1c36;\\n    color: #fff;\\n    \\n  }\\n  \\n  .profile-image-pic[_ngcontent-%COMP%]{\\n    height: 200px;\\n    width: 200px;\\n    object-fit: cover;\\n  }\\n  \\n  \\n  \\n  .cardbody-color[_ngcontent-%COMP%]{\\n    background-color: #ebf2fa;\\n  }\\n  \\n  a[_ngcontent-%COMP%]{\\n    text-decoration: none;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50L2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVzs7RUFFYjs7RUFFQTtJQUNFLGFBQWE7SUFDYixZQUFZO0lBQ1osaUJBQWlCO0VBQ25COzs7O0VBSUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxxQkFBcUI7RUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWNvbG9ye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBlMWMzNjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG4gIC5wcm9maWxlLWltYWdlLXBpY3tcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgXHJcbiAgLmNhcmRib2R5LWNvbG9ye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ViZjJmYTtcclxuICB9XHJcbiAgXHJcbiAgYXtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","sucessMgs","LoginComponent","constructor","FormBuilder","Service","route","submitted","ngOnInit","console","log","loginForm","group","Username","required","Password","submit","invalid","login","value","subscribe","response","detail","token","sessionStorage","setItem","JSON","stringify","setTimeout","reset","navigate","ɵɵdirectiveInject","i1","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_div_13_Template","LoginComponent_div_16_Template","LoginComponent_div_17_Template","ɵɵlistener","LoginComponent_Template_div_click_18_listener","ɵɵproperty","ɵɵclassMap","controls","errors","ɵɵpureFunction0","_c0"],"sources":["E:\\node Dhruvesh\\Webashlar\\Frontend\\src\\app\\Component\\login\\login.component.ts","E:\\node Dhruvesh\\Webashlar\\Frontend\\src\\app\\Component\\login\\login.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {  Router } from '@angular/router';\nimport { AuthService } from 'src/app/Service/AuthService/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  loginForm !: FormGroup\n  submitted : boolean = false\n  sucessMgs:string = ''\n\n\n  constructor(private FormBuilder : FormBuilder,private Service : AuthService,private route : Router){}\n\n\n  ngOnInit():void{\n\n    console.log(\"Running\")\n\n    this.loginForm = this.FormBuilder.group({\n      Username : ['',Validators.required],\n      Password : ['',Validators.required]\n    })\n\n  }\n\n\n  submit(){\n\n    this.submitted = true\n\n    if(this.loginForm.invalid){\n      return\n    }\n\n    this.Service.login(this.loginForm.value).subscribe(response=>{\n\n      if(response.response){\n        console.log(response)\n        response.detail['token'] = response.token\n        \n        sessionStorage.setItem(\"Credential\",JSON.stringify(response.detail))\n        this.sucessMgs = \"Sucessfully Logged In\"\n        setTimeout(()=>{\n          this.submitted = false\n          this.loginForm.reset()\n          this.sucessMgs = ''\n          \n          this.route.navigate(['/dashboard'])\n        },1000)\n\n      }else{\n        this.sucessMgs = \"User Not Found with Given Credential\"\n\n        setTimeout(()=>{\n          this.submitted = false\n          this.loginForm.reset()\n          this.sucessMgs = ''\n        },1000)\n      }\n\n      \n\n    })\n\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <h2 class=\"text-center text-dark mt-5\">Login Form</h2>\n        <div class=\"text-center mb-5 text-dark\">Made with bootstrap</div>\n        <div class=\"card my-5\">\n\n          <form [formGroup]=\"loginForm\" class=\"card-body cardbody-color p-lg-5\">\n\n            <div class=\"text-center\">\n              <img src=\"https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397__340.png\" class=\"img-fluid profile-image-pic img-thumbnail rounded-circle my-3\"\n                width=\"200px\" alt=\"profile\">\n            </div>\n\n            <div class=\"mb-3\">\n              <input formControlName=\"Username\" type=\"text\" class=\"{{submitted && loginForm.controls['Username'].errors ? 'form-control is-invalid' : 'form-control'}}\" id=\"Username\" aria-describedby=\"emailHelp\"\n                placeholder=\"User Name\">\n                <div *ngIf=\"submitted && loginForm.controls['Username'].errors\" class=\"text-danger\" >\n                    Required Field\n                  </div>\n            </div>\n            <div class=\"mb-3\">\n              <input formControlName=\"Password\" type=\"password\" class=\"{{submitted && loginForm.controls['Password'].errors ? 'form-control is-invalid' : 'form-control'}}\" id=\"Password\" placeholder=\"password\">\n              <div *ngIf=\"submitted && loginForm.controls['Password'].errors\" class=\"text-danger\" >\n                Required Field\n              </div>\n            </div>\n\n            <div *ngIf=\"sucessMgs != ''\" class=\"alert alert-primary\" role=\"alert\">\n                {{sucessMgs}}\n            </div>\n            <div (click)=\"submit()\" class=\"text-center\"><button type=\"submit\" class=\"btn btn-color px-5 mb-5 w-100\">Login</button></div>\n            <div id=\"emailHelp\" class=\"form-text text-center mb-5 text-dark\">Not\n              Registered? <a [routerLink]=\"['/dashboard']\" class=\"text-dark fw-bold\"> Create an\n                Account</a>\n            </div>\n          </form>\n        </div>\n\n      </div>\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}