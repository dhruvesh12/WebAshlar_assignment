{"ast":null,"code":"import _asyncToGenerator from \"E:/node Dhruvesh/Webashlar/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../assets/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl;\n  }\n  RegisterUser(Data) {\n    return this.http.post(this.baseUrl + 'Auth/register', Data);\n  }\n  login(Data) {\n    return this.http.post(this.baseUrl + 'Auth/login', Data);\n  }\n  checkLogin() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let sessionData = JSON.parse(sessionStorage['Credential']);\n      let headers = new HttpHeaders();\n      headers = headers.set('token', sessionData.token);\n      yield _this.http.post(_this.baseUrl + 'Auth/validateToken', sessionData, {\n        headers: headers\n      }).subscribe(response => {\n        let data = JSON.parse(JSON.stringify(response));\n        if (!data.response) {\n          // router.navigate(['/login'])\n          _this.loggedIn = false;\n        } else {\n          _this.loggedIn = true;\n        }\n      });\n    })();\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","environment","AuthService","constructor","http","baseUrl","RegisterUser","Data","post","login","checkLogin","_this","_asyncToGenerator","sessionData","JSON","parse","sessionStorage","headers","set","token","subscribe","response","data","stringify","loggedIn","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\node Dhruvesh\\Webashlar\\Frontend\\src\\app\\Service\\AuthService\\auth.service.ts"],"sourcesContent":["import { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {environment} from '../../../assets/environment'\nimport { Observable } from 'rxjs/internal/Observable';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseUrl  = environment.baseUrl\n  loggedIn : any \n\n  constructor(private http : HttpClient) { }\n\n\n\n\n  RegisterUser(Data:any):Observable<any>{\n\n    return this.http.post(this.baseUrl+'Auth/register',Data)\n\n  }\n\n\n  login(Data:any):Observable<any>{\n    return this.http.post(this.baseUrl+'Auth/login',Data)\n  }\n\n  async checkLogin(){\n\n    let sessionData = JSON.parse(sessionStorage['Credential'])\n    \n\n    let headers = new HttpHeaders();\n    headers = headers.set('token', sessionData.token);\n\n    await this.http.post(this.baseUrl+'Auth/validateToken',sessionData,{headers:headers}).subscribe(response=>{\n      let data = JSON.parse(JSON.stringify(response))\n      if(!data.response){\n        // router.navigate(['/login'])\n        this.loggedIn = false\n        \n      }else{\n        this.loggedIn = true\n        \n      }\n    })\n    \n\n  }\n\n}\n"],"mappings":";;AAAA,SAAoBA,WAAW,QAAQ,sBAAsB;AAE7D,SAAQC,WAAW,QAAO,6BAA6B;;;AAOvD,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,OAAO,GAAIJ,WAAW,CAACI,OAAO;EAGW;EAKzCC,YAAYA,CAACC,IAAQ;IAEnB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,GAAC,eAAe,EAACE,IAAI,CAAC;EAE1D;EAGAE,KAAKA,CAACF,IAAQ;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,GAAC,YAAY,EAACE,IAAI,CAAC;EACvD;EAEMG,UAAUA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAEd,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC,YAAY,CAAC,CAAC;MAG1D,IAAIC,OAAO,GAAG,IAAIjB,WAAW,EAAE;MAC/BiB,OAAO,GAAGA,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,WAAW,CAACM,KAAK,CAAC;MAEjD,MAAMR,KAAI,CAACP,IAAI,CAACI,IAAI,CAACG,KAAI,CAACN,OAAO,GAAC,oBAAoB,EAACQ,WAAW,EAAC;QAACI,OAAO,EAACA;MAAO,CAAC,CAAC,CAACG,SAAS,CAACC,QAAQ,IAAE;QACxG,IAAIC,IAAI,GAAGR,IAAI,CAACC,KAAK,CAACD,IAAI,CAACS,SAAS,CAACF,QAAQ,CAAC,CAAC;QAC/C,IAAG,CAACC,IAAI,CAACD,QAAQ,EAAC;UAChB;UACAV,KAAI,CAACa,QAAQ,GAAG,KAAK;SAEtB,MAAI;UACHb,KAAI,CAACa,QAAQ,GAAG,IAAI;;MAGxB,CAAC,CAAC;IAAA;EAGJ;;SA1CWtB,WAAW;;mBAAXA,MAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX1B,MAAW;EAAA2B,OAAA,EAAX3B,MAAW,CAAA4B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}